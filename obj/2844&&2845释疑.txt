2821:
1. char * readOne(char *s, int *a); 这个是自定义函数，参数是字符指针s（即字符串首的地址）和整形数组a；返回值是字符指针，表示读了多项式的一项后指向字符串剩余的项的指针。
2. 函数从s处开始试图读取多项式的一项，比如3x^2-6x+1这个串，s开始指向3的位置，即串首0位置；读取一项表示读取了3x^2，且置a[2]=3，返回char *字符指针表示返回'-'处的字符指针；第二次调用时，读取-6x，置a[1]=-6，返回char *字符指针表示返回'+'处的字符指针;最后一次读取+1，置a[0]=1，返回char *字符指针表示返回串尾处的字符指针，即'\0', 循环结束。


2844：
1. 你的解法是正确的，只是要记得输入结束后得按CTRL+Z，这样scanf函数才不会继续认为你还有其他输入而等待。另外输出虽然结尾的空格没有了 但输出第一个数的时候多了一个空格，自己考虑怎么处理。


2845:
1. 你考虑一下，readeq函数执行的任务是什么？在main的注释里面已经写了：从方程式中获取变量名、变量的系数之和、常量的和
2. 方程式用字符串表示。作为readeq函数的输入参数char *s，上面说了，函数需要返回三个值，分别是方程式里面的变量名(var)、系数之和(co)以及常量和(val)。
3. 由于函数返回值只能有一个，因此无法通过普通的函数返回值方式来返回结果（你另外写一个结构体，然后返回结构体指针的方式也可以，但这另当别论）。
4. 需要返回三个值，并且这三个值都是简单类型-整型（char是一个字节的整形），因此readeq函数必须声明为指针，而main在调用时，必须将变量的地址传递过去，即&
5. 思考一下学过的swap交换两个整数的函数就应该明白了
   void swap(int *a, int *b) {
       int tmp = *a; *a = *b; *b=tmp;
   }
   main调用是这样的： int a = 5, b= 3; swap(&a, &b);
