分配n*m矩阵直接用char *a指针即可，当作一维数组使用，然后把a[i][j]改成a[i*(2*n+1) + j]，一行有(2*n+1)个元素。

另外string.h库中有个memset函数，可以直接将数组的元素全部设置为某个固定值，memset(a, ' ', (2*n+1) * (2*n+1));

可以设置两个临时变量 row=(2*n+1), size=row*row, 这样看起来就简单些了。a[i][j]就表示成a[i*row+j]，a=(char*)malloc(size);




char **a主要用于每行元素数量不等的情况，比如

a = (char **)malloc((2*n+1) * sizeof(char *)); //分配(2*n+1)个元素，每个元素都是一个指针

然后循环分配每个指针的空间:

for (i = 0; i<(2*n+1);i++) 

    a[i] = (char *)malloc((2*n+1) * sizeof(char)); //a[i]类型是char *，执行malloc前指向的地址未知，也不能使用。
但这样使用起来更麻烦。

你在题目里面使用：a=(char**)malloc((2*n+1)*(2*n+1)*sizeof(char));

然后用a[i][j]是不行的，因为编译器不知道你这么分配后，一行到底有几个元素。




见附件，可以用注释掉的部分来看看**指针的工作方式。